AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  SAM Template for Amazon Redshift Monitoring

Parameters:
  ClusterName:
    Default: my-redshift-cluster
    Description: Cluster Name
    Type: String
    AllowedPattern: .*
  DbUser:
    Default: My DB User
    Description: Name of the database user to connect to
    Type: String
    AllowedPattern: .*
  EncryptedPassword:
    Default: Base64 Encoded Encrypted Password
    Description: Password encrypted with AWS KMS
    Type: String
    AllowedPattern: .*
  HostName:
    Default: my-redshift-cluster.XXXXXXXXXXXX.<region>.redshift.amazonaws.com
    Description: Cluster Endpoint Address
    Type: String
    AllowedPattern: .*\.redshift\.amazonaws\.com$
  HostPort:
    Default: 5439
    Description: Database Port
    Type: Number
    MinValue: 1024
    MaxValue: 65535
  DatabaseName:
    Default: mydb
    Description: Database Name to connect to
    Type: String
    AllowedPattern: .*
  SecurityGroups:
    Default: mygroup1, mygroup2
    Description: Security Groups as CSV list to use for the deployed function (may be required for Redshift security policy)
    Type: CommaDelimitedList
  SubnetIds:
    Default: subnet1, subnet2, subnet3
    Description: List of private Subnets in VPC in which the function will egress network connections
    Type: CommaDelimitedList
  AggregationInterval:
    Default: 1 hour
    Description: Interval for aggregating statistics
    Type: String
    AllowedValues:
      - 1 hour
      - 10 minutes


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:

  AmazonRedshiftMonitoringFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: amazon_redshift_monitoring/
      Handler: lambda_function.lambda_handler
      Runtime: python2.7
      MemorySize: 192
      Timeout: 300
      Tags:
        Name: RedshiftAdvancedMonitoring
      Role: !GetAtt ScheduledServiceIAMRole.Arn
      VpcConfig:
        SecurityGroupIds:
          !Ref SecurityGroups
        SubnetIds:
          !Ref SubnetIds
      Environment:
        Variables:
          DbUser: !Ref DbUser
          EncryptedPassword: !Ref EncryptedPassword
          ClusterName: !Ref ClusterName
          HostName: !Ref HostName
          HostPort: !Ref HostPort
          DatabaseName: !Ref DatabaseName
          AggregationInterval: !Ref AggregationInterval
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Input: 
              !Sub |
                {
                  "DbUser":"${DbUser}",
                  "EncryptedPassword":"${EncryptedPassword}",
                  "ClusterName":"${ClusterName}",
                  "HostName":"${HostName}",
                  "HostPort":"${HostPort}",
                  "DatabaseName":"${DatabaseName}",
                  "AggregationInterval":"${AggregationInterval}"
                }



  ScheduledServiceIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
        RoleName: "LambdaRedshiftMonitoringRole"
        Path: "/"
        ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Sid: "AllowLambdaServiceToAssumeRole"
              Effect: "Allow"
              Action:
                - "sts:AssumeRole"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
        Policies:
          -
            PolicyName: "LambdaRedshiftMonitoringPolicy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "cloudwatch:PutMetricData"                    
                    - "kms:Decrypt"
                  Resource: "*"

Outputs:
  AmazonRedshiftMonitoringFunction:
    Description: "Amazon Redshift Monitoring Function ARN"
    Value: !GetAtt AmazonRedshiftMonitoringFunction.Arn
  ScheduledServiceIAMRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ScheduledServiceIAMRole.Arn
